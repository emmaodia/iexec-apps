{
  "contractName": "TLSNotary",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "LogResult",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryUrl",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_query",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_method",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_kwargs",
          "type": "string"
        }
      ],
      "name": "checkUrl",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"LogResult\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryUrl\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_query\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_kwargs\",\"type\":\"string\"}],\"name\":\"checkUrl\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/TLSNotary.sol\":\"TLSNotary\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/TLSNotary.sol\":{\"keccak256\":\"0x44bccc54af3576dca2d48dfde9bffb64539466f424d1a8fadb159e927a36f42d\",\"urls\":[\"bzz-raw://37384760752ffeaebe1a6fdc06293fab314e3c39e0554fcd61a76cddc86273f3\",\"dweb:/ipfs/QmdBfNebXVsBHqYoQPVqid2Sdp6bcKqCUrRKUsXKSjhtRn\"]},\"/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/provableAPI_0.5.sol\":{\"keccak256\":\"0x599540b4da2f005e736061a25f83b8effa219b94be0d55a7629cbe29c2710fc9\",\"urls\":[\"bzz-raw://de94881c9ab43ee790753e4ad8efe6629b9ac7c216f823f9249512916973b4bb\",\"dweb:/ipfs/QmSbfYsZZpQbrsHWfNyCFXajGW5t2PAxhUmCXPPpntpemN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002d600160f81b601060f81b176200003360201b60201c565b62000a54565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620000c357506000620000c1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200039660201b60201c565b145b15620000dd57620000db6000620003a160201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200014857600080fd5b505af11580156200015d573d6000803e3d6000fd5b505050506040513d60208110156200017457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620002c157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200024457600080fd5b505af115801562000259573d6000803e3d6000fd5b505050506040513d60208110156200027057600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200037a57600080fd5b505af11580156200038f573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000620003b3620003ba60201b60201c565b9050919050565b600080620003e2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200039660201b60201c565b11156200048e57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004846040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506200098960201b60201c565b6001905062000986565b6000620004b573c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200039660201b60201c565b1115620005615773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005576040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506200098960201b60201c565b6001905062000986565b60006200058873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200039660201b60201c565b1115620006345773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200062a6040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506200098960201b60201c565b6001905062000986565b60006200065b73146500cfd35b22e4a392fe0adc06de1a1368ed486200039660201b60201c565b1115620007075773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006fd6040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506200098960201b60201c565b6001905062000986565b60006200072e73a2998efd205fb9d4b4963afb70778d6354ad3a416200039660201b60201c565b1115620007da5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007d06040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506200098960201b60201c565b6001905062000986565b600062000801736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200039660201b60201c565b11156200086757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000986565b60006200088e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200039660201b60201c565b1115620008f4577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000986565b60006200091b7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200039660201b60201c565b111562000981577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000986565b600090505b90565b8060029080519060200190620009a1929190620009a5565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620009e857805160ff191683800117855562000a19565b8280016001018555821562000a19579182015b8281111562000a18578251825591602001919060010190620009fb565b5b50905062000a28919062000a2c565b5090565b62000a5191905b8082111562000a4d57600081600090555060010162000a33565b5090565b90565b6121ed8062000a646000396000f3fe6080604052600436106100345760003560e01c806327dc297e146100395780632e23f1c11461010b57806338bbfa501461038b575b600080fd5b34801561004557600080fd5b506101096004803603604081101561005c57600080fd5b81019080803590602001909291908035906020019064010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104f4565b005b6103896004803603608081101561012157600080fd5b810190808035906020019064010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101d557600080fd5b8201836020820111156101e757600080fd5b8035906020019184600183028401116401000000008311171561020957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561026c57600080fd5b82018360208201111561027e57600080fd5b803590602001918460018302840111640100000000831117156102a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030357600080fd5b82018360208201111561031557600080fd5b8035906020019184600183028401116401000000008311171561033757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610537565b005b34801561039757600080fd5b506104f2600480360360608110156103ae57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d557600080fd5b8201836020820111156103e757600080fd5b8035906020019184600183028401116401000000008311171561040957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561046c57600080fd5b82018360208201111561047e57600080fd5b803590602001918460018302840111640100000000831117156104a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610695565b005b610533828260006040519080825280601f01601f19166020018201604052801561052d5781602001600182028038833980820191505090505b50610695565b5050565b3073ffffffffffffffffffffffffffffffffffffffff163161058d6040518060400160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250610775565b11156105e3577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b815260200180612138604b913960600191505060405180910390a161068f565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001806121836036913960400191505060405180910390a161068d6040518060400160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250604051806080016040528087815260200186815260200185815260200184815250610b06565b505b50505050565b61069d610e71565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d457600080fd5b7fa25f2099919c7f026f9326edd9b612739f6ef899978c6aa38ba12db0b7830cf7826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561073657808201518184015260208101905061071b565b50505050905090810190601f1680156107635780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107fd575060006107fb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b1561080e5761080c6000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b505050506040513d60208110156108a257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109eb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d602081101561099a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a78578082015181840152602081019050610a5d565b50505050905090810190601f168015610aa55780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b505050506040513d6020811015610aee57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b8e57506000610b8c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15610b9f57610b9d6000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050506040513d6020811015610c3357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d7c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015610db357816020015b6060815260200190600190039081610d9e5790505b50905082600060048110610dc357fe5b602002015181600081518110610dd557fe5b602002602001018190525082600160048110610ded57fe5b602002015181600181518110610dff57fe5b602002602001018190525082600260048110610e1757fe5b602002015181600281518110610e2957fe5b602002602001018190525082600360048110610e4157fe5b602002015181600381518110610e5357fe5b6020026020010181905250610e6884826111aa565b91505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610ef957506000610ef7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15610f0a57610f086000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f7457600080fd5b505af1158015610f88573d6000803e3d6000fd5b505050506040513d6020811015610f9e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110e757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561106c57600080fd5b505af1158015611080573d6000803e3d6000fd5b505050506040513d602081101561109657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561114e57600080fd5b505afa158015611162573d6000803e3d6000fd5b505050506040513d602081101561117857600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006111a36116fe565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061123257506000611230600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15611243576112416000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112ad57600080fd5b505af11580156112c1573d6000803e3d6000fd5b505050506040513d60208110156112d757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461142057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113a557600080fd5b505af11580156113b9573d6000803e3d6000fd5b505050506040513d60208110156113cf57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114af578082015181840152602081019050611494565b50505050905090810190601f1680156114dc5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156114fb57600080fd5b505af115801561150f573d6000803e3d6000fd5b505050506040513d602081101561152557600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111561155b576000801b9150506116f8565b606061156684611c55565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383eed3d583600088856040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156116035780820151818401526020810190506115e8565b50505050905090810190601f1680156116305780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561166957808201518184015260208101905061164e565b50505050905090810190601f1680156116965780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156116b757600080fd5b505af11580156116cb573d6000803e3d6000fd5b50505050506040513d60208110156116e257600080fd5b8101908080519060200190929190505050925050505b92915050565b60008061171e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61118e565b11156117c057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117b76040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b60006117df73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161118e565b11156118815773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118786040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611cd5565b60019050611c52565b60006118a073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61118e565b11156119425773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119396040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b600061196173146500cfd35b22e4a392fe0adc06de1a1368ed4861118e565b1115611a035773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119fa6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b6000611a2273a2998efd205fb9d4b4963afb70778d6354ad3a4161118e565b1115611ac45773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611abb6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b6000611ae3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561118e565b1115611b4757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b6000611b667320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61118e565b1115611bca577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b6000611be97351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61118e565b1115611c4d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b600090505b90565b6060611c5f611cef565b611c67612078565b611c7381610400611cfb565b611c7c81611d45565b60008090505b8351811015611cbe57611cb1848281518110611c9a57fe5b602002602001015183611d5390919063ffffffff16565b8080600101915050611c82565b50611cc881611d78565b8060000151915050919050565b8060029080519060200190611ceb929190612092565b5050565b60405180590338823950565b6000819050600060208281611d0c57fe5b0614611d255760208181611d1c57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b611d50816004611d86565b50565b611d608260038351611da7565b611d738183611ee790919063ffffffff16565b505050565b611d83816007611d86565b50565b611da3601f60058360ff16901b1783611f9290919063ffffffff16565b5050565b60178111611dd357611dce8160058460ff16901b60ff161784611f9290919063ffffffff16565b611ee2565b60ff8111611e1457611df8601860058460ff16901b1784611f9290919063ffffffff16565b611e0e81600185611fd29092919063ffffffff16565b50611ee1565b61ffff8111611e5657611e3a601960058460ff16901b1784611f9290919063ffffffff16565b611e5081600285611fd29092919063ffffffff16565b50611ee0565b63ffffffff8111611e9a57611e7e601a60058460ff16901b1784611f9290919063ffffffff16565b611e9481600485611fd29092919063ffffffff16565b50611edf565b67ffffffffffffffff8111611ede57611ec6601b60058460ff16901b1784611f9290919063ffffffff16565b611edc81600885611fd29092919063ffffffff16565b505b5b5b5b5b505050565b611eef612078565b82602001518360000151518351011115611f1f57611f1e836002611f1886602001518651612039565b02612055565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110611f665781518352602083019250602082019150602081039050611f43565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115611fb857611fb7826002846020015102612055565b5b815180516020818301018381536001820183525050505050565b611fda612078565b83602001518460000151518301111561200857612007846002612001876020015186612039565b02612055565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561204b5782905061204f565b8190505b92915050565b6060826000015190506120688383611cfb565b6120728382611ee7565b50505050565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120d357805160ff1916838001178555612101565b82800160010185558215612101579182015b828111156121005782518255916020019190600101906120e5565b5b50905061210e9190612112565b5090565b61213491905b80821115612130576000816000905550600101612118565b5090565b9056fe50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f72207468652071756572792066656550726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2ea265627a7a72315820252ea54a6037930403ed6274da9c37cafd4b18e378dc619c2a075962801707ec64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806327dc297e146100395780632e23f1c11461010b57806338bbfa501461038b575b600080fd5b34801561004557600080fd5b506101096004803603604081101561005c57600080fd5b81019080803590602001909291908035906020019064010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104f4565b005b6103896004803603608081101561012157600080fd5b810190808035906020019064010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101d557600080fd5b8201836020820111156101e757600080fd5b8035906020019184600183028401116401000000008311171561020957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561026c57600080fd5b82018360208201111561027e57600080fd5b803590602001918460018302840111640100000000831117156102a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030357600080fd5b82018360208201111561031557600080fd5b8035906020019184600183028401116401000000008311171561033757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610537565b005b34801561039757600080fd5b506104f2600480360360608110156103ae57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d557600080fd5b8201836020820111156103e757600080fd5b8035906020019184600183028401116401000000008311171561040957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561046c57600080fd5b82018360208201111561047e57600080fd5b803590602001918460018302840111640100000000831117156104a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610695565b005b610533828260006040519080825280601f01601f19166020018201604052801561052d5781602001600182028038833980820191505090505b50610695565b5050565b3073ffffffffffffffffffffffffffffffffffffffff163161058d6040518060400160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250610775565b11156105e3577fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252604b815260200180612138604b913960600191505060405180910390a161068f565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001806121836036913960400191505060405180910390a161068d6040518060400160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250604051806080016040528087815260200186815260200185815260200184815250610b06565b505b50505050565b61069d610e71565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d457600080fd5b7fa25f2099919c7f026f9326edd9b612739f6ef899978c6aa38ba12db0b7830cf7826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561073657808201518184015260208101905061071b565b50505050905090810190601f1680156107635780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107fd575060006107fb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b1561080e5761080c6000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b505050506040513d60208110156108a257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109eb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d602081101561099a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a78578082015181840152602081019050610a5d565b50505050905090810190601f168015610aa55780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b505050506040513d6020811015610aee57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b8e57506000610b8c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15610b9f57610b9d6000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050506040513d6020811015610c3357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d7c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015610db357816020015b6060815260200190600190039081610d9e5790505b50905082600060048110610dc357fe5b602002015181600081518110610dd557fe5b602002602001018190525082600160048110610ded57fe5b602002015181600181518110610dff57fe5b602002602001018190525082600260048110610e1757fe5b602002015181600281518110610e2957fe5b602002602001018190525082600360048110610e4157fe5b602002015181600381518110610e5357fe5b6020026020010181905250610e6884826111aa565b91505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610ef957506000610ef7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15610f0a57610f086000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f7457600080fd5b505af1158015610f88573d6000803e3d6000fd5b505050506040513d6020811015610f9e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110e757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561106c57600080fd5b505af1158015611080573d6000803e3d6000fd5b505050506040513d602081101561109657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561114e57600080fd5b505afa158015611162573d6000803e3d6000fd5b505050506040513d602081101561117857600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006111a36116fe565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061123257506000611230600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b145b15611243576112416000611199565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112ad57600080fd5b505af11580156112c1573d6000803e3d6000fd5b505050506040513d60208110156112d757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461142057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113a557600080fd5b505af11580156113b9573d6000803e3d6000fd5b505050506040513d60208110156113cf57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114af578082015181840152602081019050611494565b50505050905090810190601f1680156114dc5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156114fb57600080fd5b505af115801561150f573d6000803e3d6000fd5b505050506040513d602081101561152557600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111561155b576000801b9150506116f8565b606061156684611c55565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383eed3d583600088856040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156116035780820151818401526020810190506115e8565b50505050905090810190601f1680156116305780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561166957808201518184015260208101905061164e565b50505050905090810190601f1680156116965780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156116b757600080fd5b505af11580156116cb573d6000803e3d6000fd5b50505050506040513d60208110156116e257600080fd5b8101908080519060200190929190505050925050505b92915050565b60008061171e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61118e565b11156117c057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117b76040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b60006117df73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161118e565b11156118815773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118786040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611cd5565b60019050611c52565b60006118a073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61118e565b11156119425773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119396040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b600061196173146500cfd35b22e4a392fe0adc06de1a1368ed4861118e565b1115611a035773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119fa6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b6000611a2273a2998efd205fb9d4b4963afb70778d6354ad3a4161118e565b1115611ac45773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611abb6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611cd5565b60019050611c52565b6000611ae3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561118e565b1115611b4757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b6000611b667320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61118e565b1115611bca577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b6000611be97351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61118e565b1115611c4d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c52565b600090505b90565b6060611c5f611cef565b611c67612078565b611c7381610400611cfb565b611c7c81611d45565b60008090505b8351811015611cbe57611cb1848281518110611c9a57fe5b602002602001015183611d5390919063ffffffff16565b8080600101915050611c82565b50611cc881611d78565b8060000151915050919050565b8060029080519060200190611ceb929190612092565b5050565b60405180590338823950565b6000819050600060208281611d0c57fe5b0614611d255760208181611d1c57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b611d50816004611d86565b50565b611d608260038351611da7565b611d738183611ee790919063ffffffff16565b505050565b611d83816007611d86565b50565b611da3601f60058360ff16901b1783611f9290919063ffffffff16565b5050565b60178111611dd357611dce8160058460ff16901b60ff161784611f9290919063ffffffff16565b611ee2565b60ff8111611e1457611df8601860058460ff16901b1784611f9290919063ffffffff16565b611e0e81600185611fd29092919063ffffffff16565b50611ee1565b61ffff8111611e5657611e3a601960058460ff16901b1784611f9290919063ffffffff16565b611e5081600285611fd29092919063ffffffff16565b50611ee0565b63ffffffff8111611e9a57611e7e601a60058460ff16901b1784611f9290919063ffffffff16565b611e9481600485611fd29092919063ffffffff16565b50611edf565b67ffffffffffffffff8111611ede57611ec6601b60058460ff16901b1784611f9290919063ffffffff16565b611edc81600885611fd29092919063ffffffff16565b505b5b5b5b5b505050565b611eef612078565b82602001518360000151518351011115611f1f57611f1e836002611f1886602001518651612039565b02612055565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110611f665781518352602083019250602082019150602081039050611f43565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115611fb857611fb7826002846020015102612055565b5b815180516020818301018381536001820183525050505050565b611fda612078565b83602001518460000151518301111561200857612007846002612001876020015186612039565b02612055565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561204b5782905061204f565b8190505b92915050565b6060826000015190506120688383611cfb565b6120728382611ee7565b50505050565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120d357805160ff1916838001178555612101565b82800160010185558215612101579182015b828111156121005782518255916020019190600101906120e5565b5b50905061210e9190612112565b5090565b61213491905b80821115612130576000816000905550600101612118565b5090565b9056fe50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f72207468652071756572792066656550726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2ea265627a7a72315820252ea54a6037930403ed6274da9c37cafd4b18e378dc619c2a075962801707ec64736f6c634300050c0032",
  "sourceMap": "168:1371:1:-;;;336:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:108:1;379:58;11351:4:2;419:17:1;;11441:4:2;397:19:1;;:39;379:17;;;:58;;:::i;:::-;168:1371;;37079:116:2;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:2;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:2;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37158:8;;;;;;;;;;;:21;;;37180:7;37158:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37158:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37158:30:2;;;;37079:116;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;;;:21;;:::i;:::-;12764:28;;12594:205;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;;;:55;;:::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;;;:55;;:::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;;;:55;;:::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;;;:55;;:::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;;;:55;;:::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;;;:55;;:::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;;;:55;;:::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;;;:55;;:::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;168:1371:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "168:1371:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15342:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15342:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15342:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15342:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15342:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15342:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15342:122:2;;;;;;;;;;;;;;;:::i;:::-;;681:652:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;681:652:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;681:652:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;681:652:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;681:652:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;681:652:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;681:652:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;681:652:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;681:652:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;681:652:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;681:652:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;681:652:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;681:652:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;681:652:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;681:652:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;681:652:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;681:652:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;681:652:1;;;;;;;;;;;;;;;:::i;:::-;;450:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:225:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;450:225:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;450:225:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;450:225:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;450:225:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;450:225:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;450:225:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;450:225:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;450:225:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;450:225:1;;;;;;;;;;;;;;;:::i;:::-;;15342:122:2;15417:40;15428:5;15435:7;15454:1;15444:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15444:12:2;;;;15417:10;:40::i;:::-;15342:122;;:::o;681:652:1:-;917:4;909:21;;;874:32;;;;;;;;;;;;;;;;;;:17;:32::i;:::-;:56;870:457;;;951:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:457;;;1085:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:140;;;;;;;;;;;;;;;;;;;;;;;;;;1223:6;1176:140;;;;1247:7;1176:140;;;;1272:4;1176:140;;;;1294:7;1176:140;;;:14;:140::i;:::-;;870:457;681:652;;;;:::o;450:225::-;614:20;:18;:20::i;:::-;600:34;;:10;:34;;;592:43;;;;;;650:18;660:7;650:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;650:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:225;;;:::o;15654:156:2:-;15738:16;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:2;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:2;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;15773:8;;;;;;;;;;;:17;;;15791:11;15773:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15773:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15773:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15773:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15773:30:2;;;;;;;;;;;;;;;;15766:37;;15654:156;;;:::o;25015:353::-;25120:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:2;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:2;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;25143:23;25182:1;25169:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25143:41;;25207:5;25213:1;25207:8;;;;;;;;;;;25194:7;25202:1;25194:10;;;;;;;;;;;;;:21;;;;25238:5;25244:1;25238:8;;;;;;;;;;;25225:7;25233:1;25225:10;;;;;;;;;;;;;:21;;;;25269:5;25275:1;25269:8;;;;;;;;;;;25256:7;25264:1;25256:10;;;;;;;;;;;;;:21;;;;25300:5;25306:1;25300:8;;;;;;;;;;;25287:7;25295:1;25287:10;;;;;;;;;;;;;:21;;;;25325:36;25340:11;25353:7;25325:14;:36::i;:::-;25318:43;;;25015:353;;;;:::o;37202:130::-;37262:24;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:2;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:2;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37305:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37305:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37305:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37305:20:2;;;;;;;;;;;;;;;;37298:27;;37202:130;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;:21::i;:::-;12764:28;;12594:205;;;:::o;19319:403::-;19423:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:2;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:2;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;19446:10;19459:8;;;;;;;;;;;:17;;;19477:11;19459:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19459:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19459:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19459:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19459:30:2;;;;;;;;;;;;;;;;19446:43;;19535:6;19521:11;:20;19511:7;:30;19503:5;:38;19499:104;;;19564:1;19557:8;;;;;;;19499:104;19612:17;19632:16;19642:5;19632:9;:16::i;:::-;19612:36;;19665:8;;;;;;;;;;;:15;;;19687:5;19694:1;19697:11;19710:4;19665:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19665:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19665:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19665:50:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19665:50:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19665:50:2;;;;;;;;;;;;;;;;19658:57;;;;12111:1;19319:403;;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;:55::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;:55::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;:55::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;:55::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;:55::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;:55::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;:55::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;:55::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;44295:369::-;44359:26;44397:19;:17;:19::i;:::-;44426:24;;:::i;:::-;44460:22;44472:3;44477:4;44460:11;:22::i;:::-;44492:16;:3;:14;:16::i;:::-;44523:6;44532:1;44523:10;;44518:89;44539:4;:11;44535:1;:15;44518:89;;;44571:25;44588:4;44593:1;44588:7;;;;;;;;;;;;;;44571:3;:16;;:25;;;;:::i;:::-;44552:3;;;;;;;44518:89;;;;44616:17;:3;:15;:17::i;:::-;44650:3;:7;;;44643:14;;;44295:369;;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;57901:170::-;57995:4;57989:11;58049:4;58042:5;58038:16;58028:8;58022:4;58013:42;57963:102;:::o;4277:434::-;4351:13;4367:9;4351:25;;4407:1;4401:2;4390:8;:13;;;;;;:18;4386:81;;4453:2;4442:8;:13;;;;;;4436:2;:20;4424:32;;;;4386:81;4492:8;4476:4;:13;;:24;;;;;4588:4;4582:11;4619:3;4613:4;4606:17;4648:1;4643:3;4636:14;4685:8;4680:3;4676:18;4670:4;4663:32;4557:148;;;;:::o;10510:128::-;10581:50;10608:4;8666:1;10581:26;:50::i;:::-;10510:128;:::o;10309:195::-;10404:57;10415:4;8716:1;10446:6;10440:20;10404:10;:57::i;:::-;10471:26;10489:6;10471:4;:11;;:26;;;;:::i;:::-;;10309:195;;:::o;10774:136::-;10846:57;10873:4;8828:1;10846:26;:57::i;:::-;10774:136;:::o;9564:145::-;9664:38;9698:2;9693:1;9683:6;:11;;;;9682:18;9664:4;:11;;:38;;;;:::i;:::-;9564:145;;:::o;8836:722::-;8947:2;8937:6;:12;8933:619;;8965:42;8999:6;8994:1;8984:6;:11;;;;8983:22;;;8965:4;:11;;:42;;;;:::i;:::-;8933:619;;;9038:4;9028:6;:14;9024:528;;9058:38;9092:2;9087:1;9077:6;:11;;;;9076:18;9058:4;:11;;:38;;;;:::i;:::-;9110:25;9125:6;9133:1;9110:4;:14;;:25;;;;;:::i;:::-;;9024:528;;;9166:6;9156;:16;9152:400;;9188:38;9222:2;9217:1;9207:6;:11;;;;9206:18;9188:4;:11;;:38;;;;:::i;:::-;9240:25;9255:6;9263:1;9240:4;:14;;:25;;;;;:::i;:::-;;9152:400;;;9296:10;9286:6;:20;9282:270;;9322:38;9356:2;9351:1;9341:6;:11;;;;9340:18;9322:4;:11;;:38;;;;:::i;:::-;9374:25;9389:6;9397:1;9374:4;:14;;:25;;;;;:::i;:::-;;9282:270;;;9430:18;9420:6;:28;9416:136;;9464:38;9498:2;9493:1;9483:6;:11;;;;9482:18;9464:4;:11;;:38;;;;:::i;:::-;9516:25;9531:6;9539:1;9516:4;:14;;:25;;;;;:::i;:::-;;9416:136;9282:270;9152:400;9024:528;8933:619;8836:722;;;:::o;5329:1213::-;5408:21;;:::i;:::-;5478:4;:13;;;5460:4;:8;;;:15;5445:5;:12;:30;:46;5441:127;;;5507:50;5514:4;5555:1;5520:32;5524:4;:13;;;5539:5;:12;5520:3;:32::i;:::-;:36;5507:6;:50::i;:::-;5441:127;5577:9;5596:8;5614;5625:5;:12;5614:23;;5690:4;5684:11;5765:6;5759:13;5852:2;5843:6;5835;5831:19;5827:28;5819:36;;5975:5;5969:12;5961:6;5957:25;5949:6;5942:41;6038:2;6031:5;6027:14;6020:21;;5656:395;;6060:206;6073:2;6066:3;:9;6060:206;;6190:3;6184:10;6178:4;6171:24;6230:2;6222:10;;;;6253:2;6246:9;;;;6084:2;6077:9;;;;6060:206;;;6275:9;6307:1;6300:3;6295:2;:8;6287:3;:17;:21;6275:33;;6400:4;6396:9;6390:3;6384:10;6380:26;6452:4;6445;6439:11;6435:22;6496:7;6486:8;6483:21;6477:4;6470:35;6351:164;;6531:4;6524:11;;;;;;5329:1213;;;;:::o;6826:575::-;6925:4;:13;;;6921:1;6903:4;:8;;;:15;:19;:35;6899:97;;;6954:31;6961:4;6983:1;6967:4;:13;;;:17;6954:6;:31::i;:::-;6899:97;7048:4;7042:11;7123:6;7117:13;7214:2;7205:6;7197;7193:19;7189:28;7312:5;7306:4;7298:20;7358:1;7350:6;7346:14;7338:6;7331:30;7014:381;;;;;:::o;7685:735::-;7770:21;;:::i;:::-;7832:4;:13;;;7814:4;:8;;;:15;7807:4;:22;:38;7803:111;;;7861:42;7868:4;7901:1;7874:24;7878:4;:13;;;7893:4;7874:3;:24::i;:::-;:28;7861:6;:42::i;:::-;7803:111;7923:9;7949:1;7942:4;7935:3;:11;:15;7923:27;;8003:4;7997:11;8078:6;8072:13;8169:4;8160:6;8152;8148:19;8144:30;8306:5;8298:4;8294:9;8287:4;8281:11;8277:27;8274:38;8268:4;8261:52;8353:4;8345:6;8341:17;8333:6;8326:33;7969:424;;;8409:4;8402:11;;;7685:735;;;;;:::o;4896:146::-;4949:9;4979:2;4974;:7;4970:47;;;5004:2;4997:9;;;;4970:47;5033:2;5026:9;;4896:146;;;;;:::o;4717:173::-;4792:19;4814:4;:8;;;4792:30;;4832:21;4837:4;4843:9;4832:4;:21::i;:::-;4863:20;4870:4;4876:6;4863;:20::i;:::-;;4717:173;;;:::o;168:1371:1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n//The Provable `proofType_TLSNotary`: available only on the Ethereum Mainnet\nimport \"./provableAPI_0.5.sol\";\n//import \"../app/tls-notary.js\";\n\ncontract TLSNotary is usingProvable {\n\n    mapping(bytes32=>bool) validURL;\n    event LogNewProvableQuery(string description);\n    event LogResult(string result);\n\n    constructor()\n        public\n    {\n        provable_setProof(proofType_TLSNotary | proofStorage_IPFS);\n    }\n\n    function __callback(\n        bytes32 _queryUrl,\n        string memory _result,\n        bytes memory _proof\n    )\n        public\n    {\n        require(msg.sender == provable_cbAddress());\n        emit LogResult(_result);\n    }\n\n    function checkUrl(\n        string memory _query,\n        string memory _method,\n        string memory _url,\n        string memory _kwargs\n    )\n        public\n        payable\n    {\n        if (provable_getPrice(\"computation\") > address(this).balance) {\n            emit LogNewProvableQuery(\"Provable query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer...\");\n            provable_query(\"computation\",\n                [_query,\n                _method,\n                _url,\n                _kwargs]\n            );\n        }\n    }\n\n    /**\n    function requestPost()\n        public\n        payable\n    {\n        request(tlsNotary,\n                \"POST\",\n                '{\"json(${URLVerify.result})}'\n                );\n    }\n    **/\n}",
  "sourcePath": "/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/TLSNotary.sol",
  "ast": {
    "absolutePath": "/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/TLSNotary.sol",
    "exportedSymbols": {
      "TLSNotary": [
        146
      ]
    },
    "id": 147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 6443,
        "src": "102:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6442,
              "src": "190:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6442",
                "typeString": "contract usingProvable"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "190:13:1"
          }
        ],
        "contractDependencies": [
          6442
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146,
          6442
        ],
        "name": "TLSNotary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 65,
            "name": "validURL",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "211:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "211:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 63,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "228:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 69,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "274:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:20:1"
            },
            "src": "248:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 73,
            "name": "LogResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "315:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:15:1"
            },
            "src": "299:31:1"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "369:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "397:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "419:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "397:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 76,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "379:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "379:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "379:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:1"
            },
            "scope": 146,
            "src": "336:108:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "582:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6457,
                            "src": "600:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "600:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 95,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4265,
                            "src": "614:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "614:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "600:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6460,
                        6461
                      ],
                      "referencedDeclaration": 6460,
                      "src": "592:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "592:43:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "660:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 100,
                      "name": "LogResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "650:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "EmitStatement",
                  "src": "645:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_queryUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "479:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "506:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "537:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:93:1"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:1"
            },
            "scope": 146,
            "src": "450:225:1",
            "stateMutability": "nonpayable",
            "superFunction": 1195,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "860:473:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "636f6d7075746174696f6e",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "892:13:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                            "typeString": "literal_string \"computation\""
                          },
                          "value": "computation"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                            "typeString": "literal_string \"computation\""
                          }
                        ],
                        "id": 116,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1210,
                          1228
                        ],
                        "referencedDeclaration": 1210,
                        "src": "874:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "874:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6485,
                            "src": "917:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TLSNotary_$146",
                              "typeString": "contract TLSNotary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TLSNotary_$146",
                              "typeString": "contract TLSNotary"
                            }
                          ],
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "909:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "874:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "1066:261:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1105:56:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                              },
                              "value": "Provable query was sent, standing by for the answer..."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                              }
                            ],
                            "id": 129,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1085:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1085:77:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1080:82:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "636f6d7075746174696f6e",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1191:13:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                                "typeString": "literal_string \"computation\""
                              },
                              "value": "computation"
                            },
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 135,
                                  "name": "_query",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "1223:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 136,
                                  "name": "_method",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1247:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 137,
                                  "name": "_url",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1272:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "_kwargs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "1294:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "id": 139,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1222:80:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_$4_memory_ptr",
                                "typeString": "string memory[4] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                                "typeString": "literal_string \"computation\""
                              },
                              {
                                "typeIdentifier": "t_array$_t_string_memory_$4_memory_ptr",
                                "typeString": "string memory[4] memory"
                              }
                            ],
                            "id": 133,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1269,
                              1312,
                              1359,
                              1404,
                              1448,
                              1494,
                              1544,
                              1592,
                              1640,
                              1690,
                              1744,
                              1796,
                              1833,
                              1873,
                              1916,
                              1956,
                              2001,
                              2049,
                              2100,
                              2148,
                              2201,
                              2257,
                              2316,
                              2372,
                              2433,
                              2497,
                              2564,
                              2628,
                              2697,
                              2769,
                              2844,
                              2916,
                              2964,
                              3014,
                              3068,
                              3120,
                              3157,
                              3197,
                              3240,
                              3280,
                              3325,
                              3373,
                              3424,
                              3472,
                              3525,
                              3581,
                              3640,
                              3696,
                              3757,
                              3821,
                              3888,
                              3952,
                              4021,
                              4093,
                              4168,
                              4240
                            ],
                            "referencedDeclaration": 2433,
                            "src": "1176:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_$4_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory[4] memory) returns (bytes32)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1176:140:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1176:140:1"
                      }
                    ]
                  },
                  "id": 143,
                  "nodeType": "IfStatement",
                  "src": "870:457:1",
                  "trueBody": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "932:128:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "971:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 124,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "951:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "951:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "EmitStatement",
                        "src": "946:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUrl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "708:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_method",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "738:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_url",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "769:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_kwargs",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "797:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:126:1"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:1"
            },
            "scope": 146,
            "src": "681:652:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "168:1371:1"
      }
    ],
    "src": "0:1539:1"
  },
  "legacyAST": {
    "absolutePath": "/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/TLSNotary.sol",
    "exportedSymbols": {
      "TLSNotary": [
        146
      ]
    },
    "id": 147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/emmanuel/gitcoin/iexec-apps/tlsNotaryDOracle/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 6443,
        "src": "102:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6442,
              "src": "190:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6442",
                "typeString": "contract usingProvable"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "190:13:1"
          }
        ],
        "contractDependencies": [
          6442
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146,
          6442
        ],
        "name": "TLSNotary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 65,
            "name": "validURL",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "211:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "211:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 63,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "228:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 69,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "274:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:20:1"
            },
            "src": "248:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 73,
            "name": "LogResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "315:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:15:1"
            },
            "src": "299:31:1"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "369:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "397:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "419:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "397:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 76,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "379:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "379:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "379:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:1"
            },
            "scope": 146,
            "src": "336:108:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "582:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6457,
                            "src": "600:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "600:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 95,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4265,
                            "src": "614:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "614:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "600:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6460,
                        6461
                      ],
                      "referencedDeclaration": 6460,
                      "src": "592:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "592:43:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "660:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 100,
                      "name": "LogResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "650:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "EmitStatement",
                  "src": "645:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_queryUrl",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "479:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "506:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "537:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:93:1"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:1"
            },
            "scope": 146,
            "src": "450:225:1",
            "stateMutability": "nonpayable",
            "superFunction": 1195,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "860:473:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "636f6d7075746174696f6e",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "892:13:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                            "typeString": "literal_string \"computation\""
                          },
                          "value": "computation"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                            "typeString": "literal_string \"computation\""
                          }
                        ],
                        "id": 116,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1210,
                          1228
                        ],
                        "referencedDeclaration": 1210,
                        "src": "874:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "874:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6485,
                            "src": "917:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TLSNotary_$146",
                              "typeString": "contract TLSNotary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TLSNotary_$146",
                              "typeString": "contract TLSNotary"
                            }
                          ],
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "909:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "874:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "1066:261:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1105:56:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                              },
                              "value": "Provable query was sent, standing by for the answer..."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                                "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                              }
                            ],
                            "id": 129,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1085:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1085:77:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1080:82:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "636f6d7075746174696f6e",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1191:13:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                                "typeString": "literal_string \"computation\""
                              },
                              "value": "computation"
                            },
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 135,
                                  "name": "_query",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "1223:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 136,
                                  "name": "_method",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1247:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 137,
                                  "name": "_url",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1272:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "_kwargs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "1294:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "id": 139,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1222:80:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_$4_memory_ptr",
                                "typeString": "string memory[4] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                                "typeString": "literal_string \"computation\""
                              },
                              {
                                "typeIdentifier": "t_array$_t_string_memory_$4_memory_ptr",
                                "typeString": "string memory[4] memory"
                              }
                            ],
                            "id": 133,
                            "name": "provable_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1269,
                              1312,
                              1359,
                              1404,
                              1448,
                              1494,
                              1544,
                              1592,
                              1640,
                              1690,
                              1744,
                              1796,
                              1833,
                              1873,
                              1916,
                              1956,
                              2001,
                              2049,
                              2100,
                              2148,
                              2201,
                              2257,
                              2316,
                              2372,
                              2433,
                              2497,
                              2564,
                              2628,
                              2697,
                              2769,
                              2844,
                              2916,
                              2964,
                              3014,
                              3068,
                              3120,
                              3157,
                              3197,
                              3240,
                              3280,
                              3325,
                              3373,
                              3424,
                              3472,
                              3525,
                              3581,
                              3640,
                              3696,
                              3757,
                              3821,
                              3888,
                              3952,
                              4021,
                              4093,
                              4168,
                              4240
                            ],
                            "referencedDeclaration": 2433,
                            "src": "1176:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_$4_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory[4] memory) returns (bytes32)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1176:140:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1176:140:1"
                      }
                    ]
                  },
                  "id": 143,
                  "nodeType": "IfStatement",
                  "src": "870:457:1",
                  "trueBody": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "932:128:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f7661626c6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "971:77:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Provable query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3243bd4392197df47a9d800876756328f6648fed7075d39f9fb3e65936cbfe4f",
                                "typeString": "literal_string \"Provable query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 124,
                            "name": "LogNewProvableQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "951:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "951:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "EmitStatement",
                        "src": "946:103:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUrl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "708:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_method",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "738:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_url",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "769:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_kwargs",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "797:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:126:1"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:1"
            },
            "scope": 146,
            "src": "681:652:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "168:1371:1"
      }
    ],
    "src": "0:1539:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2019-12-31T12:52:48.130Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}